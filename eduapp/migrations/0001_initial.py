# Generated by Django 3.1.7 on 2021-06-16 13:11

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank='true', upload_to='useravatars/', verbose_name='Қолданушы суреті')),
                ('type', models.CharField(choices=[('teacher', 'Оқытушы'), ('student', 'Оқушы')], max_length=100)),
            ],
            options={
                'verbose_name': 'Қолданушы',
                'verbose_name_plural': 'Қолданушылар',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Space name')),
            ],
            options={
                'verbose_name': 'Space',
                'verbose_name_plural': 'Spaces',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, verbose_name='Title')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Description')),
                ('cover', models.ImageField(blank='true', upload_to='course/', verbose_name='Content poster')),
                ('aim', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eduapp.category', verbose_name='Select space')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eduapp.appuser', verbose_name='Creator')),
            ],
            options={
                'verbose_name': 'Space content',
            },
        ),
        migrations.CreateModel(
            name='CourseContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, verbose_name='Тақырып')),
                ('text', ckeditor_uploader.fields.RichTextUploadingField(blank='true', verbose_name='Текст')),
                ('video', models.FileField(blank=True, null=True, upload_to='course-video/', verbose_name='Курс видеосы')),
                ('priority', models.IntegerField(blank=True, null=True, verbose_name='Реті')),
                ('document', models.FileField(blank=True, null='True', upload_to='', verbose_name='Оқу материалы')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Parent_course', to='eduapp.course')),
            ],
            options={
                'verbose_name': 'Content list',
                'verbose_name_plural': 'Content lists',
            },
        ),
        migrations.AddField(
            model_name='appuser',
            name='courses',
            field=models.ManyToManyField(blank=True, related_name='related_course', to='eduapp.Course', verbose_name='Қолданушының курстары'),
        ),
        migrations.AddField(
            model_name='appuser',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='aps', to=settings.AUTH_USER_MODEL, verbose_name='Қолданушы'),
        ),
        migrations.CreateModel(
            name='AdmissionCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courses', models.ManyToManyField(blank=True, related_name='user_courses', to='eduapp.Course', verbose_name='Қолданушының курстары')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Қолданушы', to='eduapp.appuser')),
            ],
        ),
    ]
